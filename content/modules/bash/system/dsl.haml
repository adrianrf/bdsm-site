.breadcrumbs
  %a{ :href => "/" }
    Documentation
  &nbsp;>&nbsp;
  %a{ :href => "/modules/" }
    Modules
  &nbsp;>&nbsp;
  %a{ :href => "/modules/bash/" }
    Bash
  &nbsp;>&nbsp;
  %a{ :href => "/modules/bash/system/" }
    system
  &nbsp;>&nbsp;
  %a{ :href => "/modules/bash/system/dsl/" }
    DSL API :: system
  %hr

%h1
  Module system

%h2 init_scripts_path()
%p Returns the system init scripts path (eg. /etc/init.d /etc/rc.d)
%h4 Input Parameters
%p None.
%h4 Stream Outputs
%p The system init scripts path is printed to the calling environments STDOUT.
%h4 Environmental effects
%p None.
%h4 Return Codes
%p 0 for success.
%h4 Failure Scenarios
%p Fails the OS is not of a (yet) recognized type.
%h4 Usage Examples
%pre
  %code
    :preserve
      user@archlinux$ init_scripts_path
      /etc/rc.d
%h2 confd_path()
%p Return the system conf.d path.
%h4 Input Parameters
%p None.
%h4 Stream Outputs
%p Prints the conf.d path for the current system and user.
%h4 Environmental effects
%p None.
%h4 Return Codes
%p 0 for success
%h4 Failure Scenarios
%p No failure scenarios currently.
%h4 Usage Examples
%pre
  %code
    :preserve
      root# confd_path
      /etc/conf.d
%h2 os_is_linux()
%p Tests if the operating system the process is running on is Linux.
%h4 Input Parameters
%p None.
%h4 Stream Outputs
%p None.
%h4 Environmental effects
%p None.
%h4 Return Codes
%p
  0 if the operating system is linux
  1 if the operating system is not linux
%h4 Failure Scenarios
%p No failure scenarios currently.
%h4 Usage Examples
%pre
  %code
    :preserve
      root@archlinux# os_is_linux
      root@archlinux# echo $?
      0
%h2 os_is_darwin()
%p Tests if the operating system the process is running on is darwin.
%h4 Input Parameters
%p None.
%h4 Stream Outputs
%p None.
%h4 Environmental effects
%p None.
%h4 Return Codes
%p
  0 if the operating system is darwin
  1 if the operating system is not darwin
%h4 Failure Scenarios
%p No failure scenarios currently.
%h4 Usage Examples
%pre
  %code
    :preserve
      user@OSX# os_is_darwin
      user@OSX# echo $?
      0
%h2 os_is_bsd()
%p Tests if the operating system the process is running on is bsd.
%h4 Input Parameters
%p None.
%h4 Stream Outputs
%p None.
%h4 Environmental effects
%p None.
%h4 Return Codes
%p
  0 if the operating system is bsd
  1 if the operating system is not bsd
%h4 Failure Scenarios
%p No failure scenarios currently.
%h4 Usage Examples
%pre
  %code
    :preserve
      root@bsd# os_is_bsd
      root@bsd# echo $?
      0
%h2 os_is_solaris()
%p Tests if the operating system the process is running on is solaris.
%h4 Input Parameters
%p None.
%h4 Stream Outputs
%p None.
%h4 Environmental effects
%p None.
%h4 Return Codes
%p
  0 if the operating system is linux
  1 if the operating system is not linux
%h4 Failure Scenarios
%p No failure scenarios currently.
%h4 Usage Examples
%pre
  %code
    :preserve
      root@linux# os_is_linux
      root@linux# echo $?
      0
%h2 os_is_aix()
%p Tests if the operating system the process is running on is aix.
%h4 Input Parameters
%p None.
%h4 Stream Outputs
%p None.
%h4 Environmental effects
%p None.
%h4 Return Codes
%p
  0 if the operating system is aix
  1 if the operating system is not aix
%h4 Failure Scenarios
%p No failure scenarios currently.
%h4 Usage Examples
%pre
  %code
    :preserve
      root@aix# os_is_aix
      root@aix# echo $?
      0
%h2 os_type()
%p Prints out the operating system category / type.
%h4 Input Parameters
%p None.
%h4 Stream Outputs
%p Prints the OS category/type to the calling environments STDOUT.
%h4 Environmental effects
%p None.
%h4 Return Codes
%p 0 for success
%h4 Failure Scenarios
%p No failure scenarios currently.
%h4 Usage Examples
%pre
  %code
    :preserve
      root@archlinux# os_type
      linux
      
      user@osx# os_type
      darwin
%h2 os_arch_type()
%p Prints out the OS Arch type.
%h4 Input Parameters
%p None.
%h4 Stream Outputs
%p
  Prints out the architecture type string of the system that is running the
  current process.
%h4 Environmental effects
%p None.
%h4 Return Codes
%p 0 for success.
%h4 Failure Scenarios
%p No failure scenarios currently.
%h4 Usage Examples
%pre
  %code
    :preserve
      user$ os_arch_type
      x86_64
%h2 os_arch()
%p Prints out the full OS machine type string.
%h4 Input Parameters
%p None.
%h4 Stream Outputs
%p Print the OS machine type string to STDOUT of the calling environment.
%h4 Environmental effects
%p None.
%h4 Return Codes
%p 0 for success.
%h4 Failure Scenarios
%p No failure scenarios currently.
%h4 Usage Examples
%pre
  %code
    :preserve
      user@OSX# os_arch
      i386-apple-darwin10.7.0
%h2 os_arch_capable()
%p Tests if the operating system the process is running on is Linux.
%h4 Input Parameters
%p None.
%h4 Stream Outputs
%p None.
%h4 Environmental effects
%p None.
%h4 Return Codes
%p
  0 if the operating system is linux
  1 if the operating system is not linux
%h4 Failure Scenarios
%p No failure scenarios currently.
%h4 Usage Examples
%pre
  %code
    :preserve
      user@OSX$ os_arch_capable
      x86_64
%h2 os_cpu_count()
%p Print the number of cpu cores on the current system to STDOUT
%h4 Input Parameters
%p None.
%h4 Stream Outputs
%p An integer representing the number of CPU cores or 1 if unknown.
%h4 Environmental effects
%p None.
%h4 Return Codes
%p 0 for success
%h4 Failure Scenarios
%p No failure scenarios currently.
%h4 Usage Examples
%pre
  %code
    :preserve
      user$ os_cpu_count
      24
