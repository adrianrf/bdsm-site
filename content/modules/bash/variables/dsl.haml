.breadcrumbs
  %a{ :href => "/" }
    Documentation
  &nbsp;>&nbsp;
  %a{ :href => "/modules/" }
    Modules
  &nbsp;>&nbsp;
  %a{ :href => "/modules/bash/" }
    Bash
  &nbsp;>&nbsp;
  %a{ :href => "/modules/bash/variables/" }
    variables
  &nbsp;>&nbsp;
  %a{ :href => "/modules/bash/variables/dsl/" }
    DSL API :: variables
  %hr

%h1
  Module variables

%h2 first()
%p Returns the first parameter.
%h4 Input Parameters
%p One or more parameters.
%h4 Stream Outputs
%p Prints the first positional parameter to STDOUT of the calling environment.
%h4 Environmental effects
%p None.
%h4 Return Codes
%p 0 for success
%h4 Failure Scenarios
%p Fails if no parameters are passed.
%h4 Usage Examples
%pre
  %code
    :preserve
      user$ first one two three
      one
      
      user$ array=($(ls $HOME))
      user$ first ${array[@]}
      Desktop
%h2 last()
%p Returns the last parameter.
%h4 Input Parameters
%p One or more parameters.
%h4 Stream Outputs
%p Prints the last positional parameter to STDOUT of the calling environment.
%h4 Environmental effects
%p None.
%h4 Return Codes
%p 0 for success
%h4 Failure Scenarios
%p Fails if no parameters are passed.
%h4 Usage Examples
%pre
  %code
    :preserve
      user$ last one two three
      one
      
      user$ array=($(ls $HOME))
      user$ last ${array[@]}
      tmp
%h2 match()
%p Tests to see if a value matches a given regex (shell extended glob pattern).
%h4 Input Parameters
%p Positional Parameter listing and descriptions.
%h4 Stream Outputs
%p None.
%h4 Environmental effects
%p None.
%h4 Return Codes
%p
  0 if the value matches the regex (shell extended glob pattern)
  1 if the value does not match the regex (shell extended glob pattern)
%h4 Failure Scenarios
%p
  Fails if no value is given
  Fails if no regex is given
%h4 Usage Examples
%pre
  %code
    :preserve
      user$ match &quot;The quick brown fox jumped over the lazy dog.&quot; &quot;*fox*&quot;
      user$ echo $?
      0
      
      user$ match &quot;The quick brown fox jumped over the lazy dog.&quot; &quot;*smurf*&quot;
      user$ echo $?
      1
%h2 variables_must_be_nonempty()
%p
  Halts the program with a fail message if any of the named variables are empty
  or undefined.
%h4 Input Parameters
%p One or more parameters specifying the names of variables.
%h4 Stream Outputs
%p None if all are
%h4 Environmental effects
%p What, if any, environmental side effects this function causes. 'None.' for none.
%h4 Return Codes
%p 0 for success
%h4 Failure Scenarios
%p
  Fails if no varaible names were given.
  Fails if any of the named variables are empty.
%h4 Usage Examples
%pre
  %code
    :preserve
      user$ cat test
      #!/usr/bin/env bash
      source &quot;/usr/local/bdsm/modules/bash/core/initialize&quot; # Load BDSM framework core.
      modules trace variables # Load the trace module.
      unset HOME
      variables_must_be_nonempty HOME
      
      user$ $PWD/test
      ERROR: Required variable 'HOME' is not set.
      ERROR: A command has returned an unhandled error code (nonzero return value).
      Backtrace:
         Trace   Line Function             File
            3.     37 fail()               /usr/local/bdsm/modules/bash/logging/dsl
            2.    192 variables_must_be_nonempty() /usr/local/bdsm/modules/bash/variables/dsl
            1.      6 main()               /Users/wayneeseguin/test
       &gt; modules/bash/logging/dsl fail() 38 $ exit 1
%h2 variable_is_nonempty()
%p Test to see if a variable is empty.
%h4 Input Parameters
%p First parameter is a string containing a variable name.
%h4 Stream Outputs
%p None.
%h4 Environmental effects
%p None.
%h4 Return Codes
%p 0 for success.
%h4 Failure Scenarios
%p Fails if no variable name was given as the first argument.
%h4 Usage Examples
%pre
  %code
    :preserve
      user$ variable_is_nonempty asdf
      user$ echo $?
      1
      
      user$ asdf=&quot;w00t! &quot;
      user$ variable_is_nonempty asdf
      user$ echo $?
      0
