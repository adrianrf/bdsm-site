%p General Services functions.
%h1 services_list
%p
  List installed services. These are extensions that have loaded the service
  module.
%h2 Input Parameters
%p None.
%h2 Stream Outputs
%p
  A list of available services to install are printed to STDOUT of
  the calling environment.
%h2 Environmental effects
%p None.
%h2 Return Codes
%p 0 for success
%h2 Failure Scenarios
%p
  NIY
  No failure conditions currently.
%h2 Usage Examples
%pre
  %code
    :preserve
      user$ services_avilable
      Available service listing has not yet been implemented.
      This feature has not yet been implemented.
%h1 services_installed
%p
  List installed services. These are extensions that have loaded the service
  module.
%h2 Input Parameters
%p None.
%h2 Stream Outputs
%p
  A list of installed extensions that load the service module are printed
  to the STDOUT of the calling environment.
%h2 Environmental effects
%p None.
%h2 Return Codes
%p 0 for success
%h2 Failure Scenarios
%p
  NIY
  No failure conditions currently.
%h2 Usage Examples
%pre
  %code
    :preserve
      user$ services_installed
      nginx unicorn redis postgresql
%h1 services_available
%p List available services. These are extensions that load the service module.
%h2 Input Parameters
%p None.
%h2 Stream Outputs
%p
  A list of available extensions that load the service module are printed to
  STDOUT of the calling environment.
%h2 Environmental effects
%p None.
%h2 Return Codes
%p 0 for success
%h2 Failure Scenarios
%p
  NIY
  No failure conditions currently.
%h2 Usage Examples
%pre
  %code
    :preserve
      user$ services_available
      nginx redis postgresql mongodb ...
%p Single Service functions.
%h1 service_start
%p Starts the given service using init scripts.
%h2 Input Parameters
%p None.
%h2 Stream Outputs
%p Whatever stream output comes from the called init script.
%h2 Environmental effects
%p None.
%h2 Return Codes
%p 0 for success
%h2 Failure Scenarios
%p
  Fails if extension was not set.
  Fails if the init script is missing or not executable.
%h2 Usage Examples
%pre
  %code
    :preserve
      user$ extension=redis
      user$ service_start
      ...
%h1 service_stop
%p stops the given service using init scripts.
%h2 Input Parameters
%p None.
%h2 Stream Outputs
%p Whatever stream output comes from the called init script.
%h2 Environmental effects
%p None.
%h2 Return Codes
%p 0 for success
%h2 Failure Scenarios
%p
  Fails if extension was not set.
  Fails if the init script is missing or not executable.
%h2 Usage Examples
%pre
  %code
    :preserve
      user$ extension=redis
      user$ service_stop
      ...
%h1 service_restart
%p restarts the given service using init scripts.
%h2 Input Parameters
%p None.
%h2 Stream Outputs
%p Whatever stream output comes from the called init script.
%h2 Environmental effects
%p None.
%h2 Return Codes
%p 0 for success
%h2 Failure Scenarios
%p
  Fails if extension was not set.
  Fails if the init script is missing or not executable.
%h2 Usage Examples
%pre
  %code
    :preserve
      user$ extension=redis
      user$ service_restart
      ...
%h1 service_status
%p statuss the given service using init scripts.
%h2 Input Parameters
%p None.
%h2 Stream Outputs
%p Whatever stream output comes from the called init script.
%h2 Environmental effects
%p None.
%h2 Return Codes
%p 0 for success
%h2 Failure Scenarios
%p
  Fails if extension was not set.
  Fails if the init script is missing or not executable.
%h2 Usage Examples
%pre
  %code
    :preserve
      user$ extension=redis
      user$ service_status
      ...
%h1 service_logtail
%p logtails the given service using init scripts.
%h2 Input Parameters
%p None.
%h2 Stream Outputs
%p Whatever stream output comes from the called init script.
%h2 Environmental effects
%p None.
%h2 Return Codes
%p 0 for success
%h2 Failure Scenarios
%p
  Fails if extension was not set.
  Fails if the init script is missing or not executable.
%h2 Usage Examples
%pre
  %code
    :preserve
      user$ extension=redis
      user$ service_logtail
      ...
%h1 service_info
%p infos the given service using init scripts.
%h2 Input Parameters
%p None.
%h2 Stream Outputs
%p Whatever stream output comes from the called init script.
%h2 Environmental effects
%p None.
%h2 Return Codes
%p 0 for success
%h2 Failure Scenarios
%p
  Fails if extension was not set.
  Fails if the init script is missing or not executable.
%h2 Usage Examples
%pre
  %code
    :preserve
      user$ extension=redis
      user$ service_info
      ...
%h1 service_configcheck
%p configchecks the given service using init scripts.
%h2 Input Parameters
%p None.
%h2 Stream Outputs
%p Whatever stream output comes from the called init script.
%h2 Environmental effects
%p None.
%h2 Return Codes
%p 0 for success
%h2 Failure Scenarios
%p
  Fails if extension was not set.
  Fails if the init script is missing or not executable.
%h2 Usage Examples
%pre
  %code
    :preserve
      user$ extension=redis
      user$ service_configcheck
      ...
%h1 service_usage
%p usages the given service using init scripts.
%h2 Input Parameters
%p None.
%h2 Stream Outputs
%p Whatever stream output comes from the called init script.
%h2 Environmental effects
%p None.
%h2 Return Codes
%p 0 for success
%h2 Failure Scenarios
%p
  Fails if extension was not set.
  Fails if the init script is missing or not executable.
%h2 Usage Examples
%pre
  %code
    :preserve
      user$ extension=redis
      user$ service_usage
      ...
%h1 service_cli
%p clis the given service using init scripts.
%h2 Input Parameters
%p None.
%h2 Stream Outputs
%p Whatever stream output comes from the called init script.
%h2 Environmental effects
%p None.
%h2 Return Codes
%p 0 for success
%h2 Failure Scenarios
%p
  Fails if extension was not set.
  Fails if the init script is missing or not executable.
%h2 Usage Examples
%pre
  %code
    :preserve
      user$ extension=redis
      user$ service_cli
      ...
%h1 service_pid
%p
  List installed services. These are extensions that have loaded the service
  module.
%h2 Input Parameters
%p None.
%h2 Stream Outputs
%p
  A list of extensions that load the service module are printed to STDOUT of
  the calling environment.
%h2 Environmental effects
%p Sets the variable 'service_pid' to contain the pid of the process or 0.
%h2 Return Codes
%p 0 for success
%h2 Failure Scenarios
%p None currently.
%h2 Usage Examples
%pre
  %code
    :preserve
      root# extension=redis
      root# service_pid
      root# echo $service_pid
      0
%h1 service_load_conf_d
%p
  Load the /etc/conf.d/{extension}.conf configuration file into the calling
  environment.
%h2 Input Parameters
%p None.
%h2 Stream Outputs
%p None, unless the configuration file contains any print statements.
%h2 Environmental effects
%p None.
%h2 Return Codes
%p 0 for success
%h2 Failure Scenarios
%p No failure conditions currently.
%h2 Usage Examples
%pre
  %code
    :preserve
      user$ extension=redis
      user$ service_load_conf_d
%p Service init functions.
%h1 service_install_init_d
%p Installs the BDSM service module init.d script for the current extension.
%h2 Input Parameters
%p None.
%h2 Stream Outputs
%p Logging messages informing the end user of what is occurring.
%h2 Environmental effects
%p None.
%h2 Return Codes
%p 0 for success
%h2 Failure Scenarios
%p No failure conditions currently.
%h2 Usage Examples
%pre
  %code
    :preserve
      user$ service_install_init_d
%h1 service_init_path
%p Sets the PATH explicitely for purposes of the current service extension.
%h2 Input Parameters
%p None.
%h2 Stream Outputs
%p None.
%h2 Environmental effects
%p Alters the PATH variable.
%h2 Return Codes
%p 0 for success
%h2 Failure Scenarios
%p No failure conditions currently.
%h2 Usage Examples
%pre
  %code
    :preserve
      user$ service_init_path
%h1 service_init_start
%p This is the generalized service init start function.
%h2 Input Parameters
%p None.
%h2 Stream Outputs
%p Logging telling the end user what is happening.
%h2 Environmental effects
%p None.
%h2 Return Codes
%p 0 for success
%h2 Failure Scenarios
%p No failure conditions currently.
%h2 Usage Examples
%pre
  %code
    :preserve
      user$ service_init_start
%h1 service_init_stop
%p This is the generalized service init stop function.
%h2 Input Parameters
%p None.
%h2 Stream Outputs
%p Logging telling the end user what is happening.
%h2 Environmental effects
%p None.
%h2 Return Codes
%p 0 for success
%h2 Failure Scenarios
%p No failure conditions currently.
%h2 Usage Examples
%pre
  %code
    :preserve
      user$ service_init_stop
%h1 service_init_usage
%p This is the generalized service init usage function.
%h2 Input Parameters
%p None.
%h2 Stream Outputs
%p Logging telling the end user what is happening.
%h2 Environmental effects
%p None.
%h2 Return Codes
%p 0 for success
%h2 Failure Scenarios
%p No failure conditions currently.
%h2 Usage Examples
%pre
  %code
    :preserve
      user$ service_init_usage
%h1 service_init_logtail
%p This is the generalized service init logtail function.
%h2 Input Parameters
%p None.
%h2 Stream Outputs
%p Logging telling the end user what is happening.
%h2 Environmental effects
%p None.
%h2 Return Codes
%p 0 for success
%h2 Failure Scenarios
%p No failure conditions currently.
%h2 Usage Examples
%pre
  %code
    :preserve
      user$ service_init_logtail
%h1 service_init_start
%p This is the generalized service init start function.
%h2 Input Parameters
%p None.
%h2 Stream Outputs
%p Logging telling the end user what is happening.
%h2 Environmental effects
%p None.
%h2 Return Codes
%p 0 for success
%h2 Failure Scenarios
%p No failure conditions currently.
%h2 Usage Examples
%pre
  %code
    :preserve
      user$ service_init_start
%h1 service_init_d
%p The main logic for generalized service init.d scripts.
%h2 Input Parameters
%p None.
%h2 Stream Outputs
%p Logging updates to inform the user what is happening.
%h2 Environmental effects
%p May alter the runstate of the service extension.
%h2 Return Codes
%p 0 for success
%h2 Failure Scenarios
%p No failure conditions currently.
%h2 Usage Examples
%pre
  %code
    :preserve
      user$ extension=redis
      user$ service_init_d
