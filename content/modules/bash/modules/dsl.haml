.breadcrumbs
  %a{ :href => "/" }
    Documentation
  &nbsp;>&nbsp;
  %a{ :href => "/modules/" }
    Modules
  &nbsp;>&nbsp;
  %a{ :href => "/modules/bash/" }
    Bash
  &nbsp;>&nbsp;
  %a{ :href => "/modules/bash/modules/" }
    modules
  &nbsp;>&nbsp;
  %a{ :href => "/modules/bash/modules/dsl/" }
    DSL API :: modules
  %hr

%h1
  Module modules

%h2 modules()
%p Loads named BDSM modules into the calling environment.
%h4 Input Parameters
%p Positional Parameter listing and descriptions.
%h4 Stream Outputs
%p None, unless loading the module causes output to a stream.
%h4 Return Codes
%p 0 for success
%h4 Failure Scenarios
%p Fails if no module names were given as parameters.
%h4 Usage Examples
%pre
  %code
    :preserve
      user$ modules array system
      user$ modules_loaded
      logging trace filesystem array system
%h2 module_load()
%p Function Description
%h4 Input Parameters
%p Positional Parameter listing and descriptions.
%h4 Stream Outputs
%p None, unless loading the module causes output to a stream.
%h4 Return Codes
%p 0 for success
%h4 Failure Scenarios
%p Fails if no extension module files names have been given.
%h4 Usage Examples
%pre
  %code
    :preserve
      user$ ls ${extension_modules_path}/bash/
      cli dsl initialize zebra
      
      user$ cat ${extension_modules_path}/bash/zebra
      #!/usr/bin/env bash
      echo &quot;Zebra!!! &quot;
      
      user$ module_load zebra # This will load zebra into the current context
      Zebra!!!
%h2 module_is_loaded()
%p Checks to see whether or not the named module has been loaded or not.
%h4 Input Parameters
%p First parameter is a module name.
%h4 Stream Outputs
%p None.
%h4 Return Codes
%p
  0 if the module has already been loaded
  1 if the module has not already been loaded
%h4 Failure Scenarios
%p Fails if no module name was given as the first parameter.
%h4 Usage Examples
%pre
  %code
    :preserve
      user$ module_is_loaded package
      user$ echo $?
      1
      user$ modules package
      user$ module_is_loaded package
      0
%h2 modules_loaded()
%p Outputs a list of all modules that have been loaded.
%h4 Input Parameters
%p Positional Parameter listing and descriptions.
%h4 Stream Outputs
%p
  Prints a space separated list of all loaded modules to the STDOUT stream of
  the calling environment.
%h4 Return Codes
%p 0 for success
%h4 Failure Scenarios
%p No failure scenarios.
%h4 Usage Examples
%pre
  %code
    :preserve
      user$ modules_loaded
      logging trace filesystem
%p Print out a list of all installed modules.
%h2 module_dsl()
%p Print out a list of all dsl for the given module.
%h4 Input Parameters
%p First parameter is the module name to print out the dsl for.
%h4 Stream Outputs
%p
  The named module's DSL function listing will is printed to the calling
  environments STDOUT.
%h4 Environmental effects
%p None.
%h4 Return Codes
%p 0 for success
%h4 Failure Scenarios
%p Fails if no module name was given.
%h4 Usage Examples
%pre
  %code
    :preserve
      user$ module_dsl defaults
      read_default()
%h2 modules_list()
%p Lists dsl for all modules.
%h4 Input Parameters
%p First parameter is the module name to print out the dsl for.
%h4 Stream Outputs
%p
  DSL function listing for each module is printed to the STDOUT of the calling
  environment.
%h4 Environmental effects
%p None.
%h4 Return Codes
%p 0 for success
%h4 Failure Scenarios
%p No failure scenarios currently.
%h4 Usage Examples
%pre
  %code
    :preserve
      user$ modules_list
      array
      
        array_is_nonempty()
        array_length()
        array_last_element()
        array_first_element()
        array_push()
        array_append()
        array_shift()
        array_unshift()
        array_join()
      ... longish output ...
%h2 modules_docs()
%p Output the module DSL documentation for a given module name.
%h4 Input Parameters
%p First parameter is the module name to print out the dsl documentation for.
%h4 Stream Outputs
%p DSL documentation for every function of the named module.
%h4 Environmental effects
%p None.
%h4 Return Codes
%p 0 for success
%h4 Failure Scenarios
%p Fails if no module name is given.
%h4 Usage Examples
%pre
  %code
    :preserve
      user$ module_docs defaults
      
      # read_default
      
      Reads default values from an extension's config/defaults file.
      
      ##### Input Parameters
      
      First parameter is the defaults file key to read (key=value).
      Second parameter is the variable name to store the retrieved value in.
      Remaining parameters are parsed out as token, value and prefix
        into|as &lt;variable name&gt;
        prefix &lt;name&gt;
        &lt;variable&gt; # If no specifier.
      
      ##### Stream Outputs
      
      None.
      
      ##### Environmental effects
      
      A variable will be set to the value, if the value is nonempty. If no variable
      name is specified the variable will be assigned the same name as the key.
      
      ##### Return Codes
      
      0 for success.
      
      ##### Failure Scenarios
      
      Fails if no arguments are passed in, at least need to specify a key.
      
      ##### Usage Examples
      
          user$ read_default &quot;version&quot; prefix &quot;package&quot; # extension is nginx for example
          user$ echo $package_version
          1.0.0
%h2 modules_docgen()
%p Lists dsl for all modules.
%h4 Input Parameters
%p First parameter is the module name to print out the dsl for.
%h4 Stream Outputs
%p
  DSL function listing for each module is printed to the STDOUT of the calling
  environment.
%h4 Environmental effects
%p None.
%h4 Return Codes
%p 0 for success
%h4 Failure Scenarios
%p No failure scenarios currently.
%h4 Usage Examples
%pre
  %code
    :preserve
      user$ modules_list
      array
      
        array_is_nonempty()
        array_length()
        array_last_element()
        array_first_element()
        array_push()
        array_append()
        array_shift()
        array_unshift()
        array_join()
      ... longish output ...
