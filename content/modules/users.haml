%h1 user_create_if_missing
%p Create a system user if it does not exist on the system.
%h2 Input Parameters
%p
  The first parameter should be the user name, then optionally
  [with] group {{groupname}}
%h2 Stream Outputs
%p What gets printed to STDOUT and STDERROR. 'None.' if nothing is output.
%h2 Environmental effects
%p What, if any, environmental side effects this function causes. 'None.' for none.
%h2 Return Codes
%p 0 for success
%h2 Failure Scenarios
%p Fails if no username is given.
%h2 Usage Examples
%pre
  %code
    :preserve
      user$ user_create_if_missing &quot;nginx&quot; with group &quot;nginx&quot;
%h1 user_delete
%p Deletes the named system user.
%h2 Input Parameters
%p The first parameter is the system user to delete.
%h2 Stream Outputs
%p None.
%h2 Environmental effects
%p The given user will no longer exist on the system.
%h2 Return Codes
%p 0 for success
%h2 Failure Scenarios
%p Fails if the user name was not specified.
%h2 Usage Examples
%pre
  %code
    :preserve
      user$ user_delete &quot;nginx&quot;
%h1 user_is_root
%p Tests if the user the current process is running as is root.
%h2 Input Parameters
%p None.
%h2 Stream Outputs
%p What gets printed to STDOUT and STDERROR. 'None.' if nothing is output.
%h2 Environmental effects
%p None.
%h2 Return Codes
%p
  0 if user is root (UID 0).
  1 if user is not root (UID 0).
%h2 Failure Scenarios
%p No failure scenarios currently.
%h2 Usage Examples
%pre
  %code
    :preserve
      user$ user_is_root
      user$ echo $?
      1
      
      root# user_is_root
      root# echo $?
      0
%h1 user_is_not_root
%p Tests if the user the current process is running as is not root.
%h2 Input Parameters
%p None.
%h2 Stream Outputs
%p None.
%h2 Environmental effects
%p None.
%h2 Return Codes
%p
  0 if user is not root (eg UID is nonzero)
  1 if user is root (UID 0)
%h2 Failure Scenarios
%p No failure scenarios currently
%h2 Usage Examples
%pre
  %code
    :preserve
      user$ user_is_not_root
      user$ echo $?
      0
      
      root# user_is_not_root
      root# echo $?
      1
%h1 user_must_be_root
%p Halts the calling program with a failure message if the user is not root.
%h2 Input Parameters
%p None.
%h2 Stream Outputs
%p A failure message is output to STDERR if the failure condition is met.
%h2 Environmental effects
%p What, if any, environmental side effects this function causes. 'None.' for none.
%h2 Return Codes
%p 0 if the user is root
%h2 Failure Scenarios
%p Fails if the program user running is not root.
%h2 Usage Examples
%pre
  %code
    :preserve
      user$ user_must_be_root
      ERROR: bdsm test test must be run as root and NOT as a user(user)
%h1 user_must_not_be_root
%p Halts the calling program with a failure message if the user is not root.
%h2 Input Parameters
%p None.
%h2 Stream Outputs
%p A failure message is output to STDERR if the failure condition is met.
%h2 Environmental effects
%p What, if any, environmental side effects this function causes. 'None.' for none.
%h2 Return Codes
%p 0 if the user is root
%h2 Failure Scenarios
%p Fails if the program user running is root.
%h2 Usage Examples
%pre
  %code
    :preserve
      user$ user_must_not_be_root
      ERROR: bdsm test test must be run as a (project) user and NOT as a root.
%h1 user_run_as
%p Runs a command as a given user.
%h2 Input Parameters
%p None.
%h2 Stream Outputs
%p Any stream outputs of the command being run.
%h2 Environmental effects
%p Any environmental effects of the command being run.
%h2 Return Codes
%p 0 for success
%h2 Failure Scenarios
%p Fails if no user was specified.
%h2 Usage Examples
%pre
  %code
    :preserve
      root# user_run_as &quot;user&quot; pwd
      /home/user
%h1 user_run_as_login
%p Runs a command as a given user, in that users login shell.
%h2 Input Parameters
%p None.
%h2 Stream Outputs
%p Any stream outputs of the command being run.
%h2 Environmental effects
%p Any environmental effects of the command being run.
%h2 Return Codes
%p 0 for success
%h2 Failure Scenarios
%p Fails if no user was specified.
%h2 Usage Examples
%pre
  %code
    :preserve
      root# user_run_as_login &quot;deploy&quot; bdsm unicorn restart
      &lt;&lt; unicorn restart output &gt;&gt;
